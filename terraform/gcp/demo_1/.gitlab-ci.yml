image:
  name: hashicorp/terraform:light
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'

before_script:
  - rm -rf .terraform
  - terraform --version
  - mkdir -p ./creds
  - echo $GCP_SERVICE_ACCOUNT_KEY > ./creds/serviceaccount.json
  - terraform -chdir=./environments/$ENVIRONMENT init

stages:
  - validate
  - plan
  - apply
  - destroy

############### validate #################
.validate:
  stage: validate
  script:
    - terraform -chdir=./environments/$ENVIRONMENT validate

validate-dev:
  extends:
    - .validate
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_DEV
    ENVIRONMENT: dev
  except:
    - master
    - /^release.*$/
    - /^hotfix.*$/
    - tags

validate-test:
  extends:
    - .validate
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_TEST
    ENVIRONMENT: test
  only:
    - /^release.*$/
    - /^hotfix.*$/

validate-prod:
  extends:
    - .validate
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_PROD
    ENVIRONMENT: prod
  only:
    - tags
  except:
    - branches

############### plan #################

.plan:
  stage: plan
  script:
    - terraform -chdir=./environments/$ENVIRONMENT plan -var-file=env.tfvars

plan-dev:
  extends:
    - .plan
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_DEV
    ENVIRONMENT: dev
  except:
    - master
    - /^release.*$/
    - /^hotfix.*$/
    - tags

plan-test:
  extends:
    - .plan
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_TEST
    ENVIRONMENT: test
  only:
    - /^release.*$/
    - /^hotfix.*$/

plan-prod:
  extends:
    - .plan
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_PROD
    ENVIRONMENT: prod
  only:
    - tags
  except:
    - branches

############### apply #################

.apply:
  stage: apply
  script:
    - terraform -chdir=./environments/$ENVIRONMENT apply -auto-approve -var-file=env.tfvars
  when: manual

apply-dev:
  extends:
    - .apply
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_DEV
    ENVIRONMENT: dev
  except:
    - master
    - /^release.*$/
    - /^hotfix.*$/
    - tags

apply-test:
  extends:
    - .apply
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_TEST
    ENVIRONMENT: test
  only:
    - /^release.*$/
    - /^hotfix.*$/

apply-prod:
  extends:
    - .apply
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_PROD
    ENVIRONMENT: prod
  only:
    - tags
  except:
    - branches

############### clean up #################

.destroy:
  stage: destroy
  script:
    - terraform -chdir=./environments/$ENVIRONMENT destroy -auto-approve -var-file=env.tfvars
  when: manual

destroy-dev:
  extends:
    - .destroy
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_DEV
    ENVIRONMENT: dev
  except:
    - master
    - /^release.*$/
    - /^hotfix.*$/
    - tags

destroy-test:
  extends:
    - .destroy
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_TEST
    ENVIRONMENT: test
  only:
    - /^release.*$/
    - /^hotfix.*$/

destroy-prod:
  extends:
    - .destroy
  variables:
    GCP_SERVICE_ACCOUNT_KEY: $GCP_SERVICE_ACCOUNT_KEY_PROD
    ENVIRONMENT: prod
  only:
    - tags
  except:
    - branches